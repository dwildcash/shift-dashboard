@using shift_dashboard.Models

@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject shift_dashboard.Models.DashboardConfig dashboardconfig
@model shift_dashboard.Models.Delegate[]

@{
    ViewData["Title"] = dashboardconfig.ApplicationName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<title>@dashboardconfig.ApplicationName</title>

@functions{

    // return the account name of previous delegate
    public shift_dashboard.Models.Delegate GetDelegateByRank(int rank)
    {
        return Model.Where(x => x.Rank == rank).FirstOrDefault();
    }
}

@section Scripts
    {
    <!-- Initialize Data Table-->
    <script type="text/javascript">
        $(document).ready(function () {
            $('#tdelegates').DataTable({
                "pageLength": 101,
                "order": [[0, "asc"]],
                "autoWidth": true,
                responsive: {
                    details: {
                        type: 'column',
                        target: -1
                    }
                },
                columnDefs: [{
                    className: 'control',
                    orderable: false,
                    targets: -1
                }]
            });
        });
    </script>
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h3><img src="@Url.Content("~/img/shift.png")" alt="shift Logo" class="brand-image img-circle elevation-3" style="opacity: .8" height="30" />@(dashboardconfig.ApplicationName)</h3>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">Index</li>
                    </ol>
                </div>
            </div>
        </div>
        <!-- /.container-fluid -->
    </section>

    <section class="content">

        <!-- Start Delegate Table-->
        <!-- Main content -->
        <div class="row">
            <div class="col-12">
                <div class="box card">
                    <div class="card-header">
                        <h3 class="card-title">Shift Delegates</h3>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <div class="table-responsive">
                            <table id="tdelegates" class="table display dt-responsive" style="width:100%">
                                <thead>
                                    <tr>
                                        <th align-middle data-priority="1">Rank</th>
                                        <th align-middle data-priority="2" class="align-middle">Username</th>
                                        <th align-middle data-priority="6" class="align-middle">Addresse</th>
                                        <th align-middle data-priority="4" class="align-middle">Voters</th>
                                        <th align-middle data-priority="4" class="align-middle">Weight</th>
                                        <th align-middle data-priority="3" class="align-middle">Daily Rank Change</th>
                                        <th align-middle data-priority="5" class="align-middle">Daily Votes Change</th>
                                        <th align-middle data-priority="5" class="align-middle">Votes For next Rank</th>
                                        <th align-middle data-priority="0" class="align-middle"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var d in Model)
                                    {
                                    <tr>
                                        <td class="align-middle"><h5><small>@d.Rank</small></h5></td>
                                        <td class="align-middle"><h5><small class="text-muted">@d.Username</small></h5></td>
                                        <td class="align-middle"><h5><small><span class="text-muted"><a href="https://explorer.shiftnrg.org/address/@d.Address} " target="_blank">@d.Address</a></span></small></h5></td>
                                        <td class="align-middle"><h5><small class="text-muted">@d.NbVoters</small></h5></td>
                                        <td class="align-middle"><h5><small class="text-muted">@((long.Parse(d.Vote) / 100000000).ToString("N0"))</small></h5></td>

                                        @if (d.RankDailyChange >= 0)
                                        {
                                            <td align-middle class="align-middle text-success">@d.RankDailyChange</td>
                                        }
                                        else
                                        {
                                            <td align-middle class="align-middle text-danger">@d.RankDailyChange</td>
                                        }

                                        @if (d.VotesDailyChange >= 0)
                                        {
                                            <td align-middle class="align-middle text-success">@(d.VotesDailyChange.ToString("N0"))</td>
                                        }
                                        else
                                        {
                                            <td align-middle class="align-middle text-danger">@(d.VotesDailyChange.ToString("N0"))</td>
                                        }

                                        @{

                                            long nextrank = 0;
                                            long previousrank = 0;

                                            if (d.Rank == 1)
                                            {
                                                nextrank = 0;
                                            }
                                            else if (d.Rank > 1 && d.Rank <= 303)
                                            {
                                                var b = GetDelegateByRank(d.Rank + 1);                                             
                                                nextrank = (long.Parse(GetDelegateByRank(d.Rank - 1).Vote) - long.Parse(d.Vote)) / 100000000;
                                            }
                                            else if (d.Rank >= 303)
                                            {
                                                nextrank = (long.Parse(GetDelegateByRank(d.Rank - 1).Vote) - long.Parse(d.Vote)) / 100000000;

                                            }

                                        }

                                        <td align-middle class="align-middle text-green">@nextrank.ToString("N0")</td>
                                        <td></td>
                                    </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
        <!-- ./Delegate Table-->
    </section>
</div>
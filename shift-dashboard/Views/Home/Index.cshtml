@using shift_dashboard.Models

@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject shift_dashboard.Models.DashboardConfig dashboardconfig
@model shift_dashboard.Models.Delegate[]

@{
    ViewData["Title"] = dashboardconfig.ApplicationName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<title>@dashboardconfig.ApplicationName</title>

@section Scripts
    {

    <script type="text/javascript">
        $(function () {
            $('.inlinesparkline').sparkline('html', { type: 'line', disableHiddenCheck: true, height: '20px', width: '100px' });
        });

        $(document).ready(function () {
            $('#delegateTable').DataTable({
                "pageLength": 50,
                "order": [[0, "asc"]],
                "autoWidth": true,
                responsive: {
                    details: {
                        type: 'column',
                        target: -1
                    }
                },
                columnDefs: [{
                    className: 'control',
                    orderable: false,
                    targets: -1
                }]
            });
        });
    </script>
}

@functions{

    // return the account name of previous delegate
    public shift_dashboard.Models.Delegate GetDelegateByRank(int rank)
    {
        return Model.Where(x => x.Rank == rank).FirstOrDefault();
    }
}

@{
    var TopVotersGainer = Model.Max(x => x.VotersDailyChange);
    var TopVotersLooser = Model.Min(x => x.VotersDailyChange);
    var TopVotesGainer = Model.Max(x => x.VotesDailyChange);
    var TopVotesLooser = Model.Min(x => x.VotesDailyChange);
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h5>Dashboard version 0.2.3</h5>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">Index</li>
                    </ol>
                </div>
            </div>
        </div>
        <!-- /.container-fluid -->
    </section>

    <section class="content">
        <div class="row col-12">
            <div class="col-lg-3 grid-margin stretch-card">
                <div class="box card aligner-wrapper">
                    <div class="card-body">
                        <p class="text-muted mb-2">Today Biggest Gain of Voters</p>
                        <div class="row">
                            <div class="col-6">
                                <h1 class="font-weight-medium mb-2 text-success">+@TopVotersGainer</h1>
                            </div>
                            <div class="col-6">
                                @if (TopVotersGainer == 0)
                                {
                                    <p class="text-muted mb-0">No gainer!</p>
                                }
                                else
                                {
                                    @foreach (var del in Model.Where(x => x.VotersDailyChange == TopVotersGainer))
                                    {
                                        <p>
                                            <small class="badge badge-success">@del.Rank</small>&nbsp;@del.Username
                                        </p>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 grid-margin stretch-card">
                <div class="box card aligner-wrapper">
                    <div class="card-body">
                        <p class="text-muted mb-2">Today Biggest Loss of Voters</p>
                        <div class="row">
                            <div class="col-6">
                                <h1 class="font-weight-medium mb-2 text-danger justify-content-center">@TopVotersLooser</h1>
                            </div>
                            <div class="col-6">
                                @if (TopVotersLooser == 0)
                                {
                                    <p class="text-muted mb-0">No looser!</p>
                                }
                                else
                                {
                                    @foreach (var del in Model.Where(x => x.VotersDailyChange == TopVotersLooser))
                                    {
                                        <p>
                                            <small class="badge badge-danger">@del.Rank</small>&nbsp;@del.Username
                                        </p>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 grid-margin stretch-card">
                <div class="box card aligner-wrapper">
                    <div class="card-body">
                        <p class="text-muted mb-2">Today Biggest Gain of Votes</p>
                        <div class="row">
                            <div class="col-6 justify-content-center">
                                <h1 class="font-weight-medium mb-2 text-success">@TopVotesGainer.ToString("N0")</h1>
                            </div>
                            <div class="col-6">
                                @if (TopVotesGainer == 0)
                                {
                                    <p class="text-muted mb-0">No gainer!</p>
                                }
                                else
                                {
                                    @foreach (var del in Model.Where(x => x.VotesDailyChange == TopVotesGainer))
                                    {
                                        <p>
                                            <small class="badge badge-success">@del.Rank</small>&nbsp;@del.Username
                                        </p>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 grid-margin stretch-card">
                <div class="box card aligner-wrapper">
                    <div class="card-body">
                        <p class="text-muted mb-2">Today Biggest Loss of votes</p>
                        <div class="row">
                            <div class="col-6">
                                <h1 class="font-weight-medium mb-2 text-danger justify-content-center">@TopVotesLooser.ToString("N0")</h1>
                            </div>
                            <div class="col-6">
                                <div class="bg-success dot-indicator"></div>

                                @if (TopVotesLooser == 0)
                                {
                                    <p class="text-muted mb-0">No Looser!</p>
                                }
                                else
                                {
                                    @foreach (var del in Model.Where(x => x.VotesDailyChange == TopVotesLooser))
                                    {
                                        <p>
                                            <small class="badge badge-danger">@del.Rank</small>&nbsp;@del.Username
                                        </p>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="content">
        <!-- /.row -->
        <!-- Start Delegate Table-->
        <!-- Main content -->
        <div class="row">
            <div class="col-12">
                <div class="box card">
                    <div class="card-header">
                        <h3 class="card-title">Shift Delegates Stats</h3>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <div class="table-responsive">
                            <table id="delegateTable" class="table display dt-responsive" style="width:100%">
                                <thead>
                                    <tr>
                                        <th align-middle data-priority="1">Rank</th>
                                        <th align-middle data-priority="2">Username</th>
                                        <th align-middle data-priority="3">Voters</th>
                                        <th align-middle data-priority="4">Weight</th>
                                        <th align-middle data-priority="5">Daily Votes Change</th>
                                        <th align-middle data-priority="7">Votes to next Rank</th>
                                        <th align-middle data-priority="6">Uptime</th>
                                        <th align-middle data-priority="8">30 Days Trend</th>
                                        <th align-middle data-priority="0"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var d in Model)
                                    {
                                        <tr>
                                            <td class="align-middle" data-order="@d.Rank">
                                                <h6>
                                                    @d.Rank
                                                </h6>

                                                @if (d.RankDailyChange > 0)
                                                {
                                                    <span class="badge badge-danger">@d.RankDailyChange</span>
                                                }
                                                else if (d.RankDailyChange < 0)
                                                {
                                                    <span class="badge badge-success">@d.RankDailyChange</span>
                                                }
                                            </td>
                                            <td class="align-middle"><h6><a href="https://explorer.shiftnrg.org/address/@d.Address" target="_blank">@d.Username</a></h6></td>
                                            <td class="align-middle">
                                                <h6>
                                                    @d.NbVoters

                                                    @if (d.VotersDailyChange > 0)
                                                    {
                                                        <small class="badge badge-success">+@d.VotersDailyChange</small>
                                                    }
                                                    else if (d.VotersDailyChange < 0)
                                                    {
                                                        <small class="badge badge-danger">@d.VotersDailyChange</small>
                                                    }
                                                </h6>
                                            </td>
                                            <td class="align-middle"><h6>@((long.Parse(d.Vote) / 100000000).ToString("N0")) <small class="text-muted"> (@d.Approval%)</small></h6></td>

                                            @if (d.VotesDailyChange >= 0)
                                            {
                                                <td align-middle class="align-middle text-success">@(d.VotesDailyChange.ToString("N0"))</td>
                                            }
                                            else
                                            {
                                                <td align-middle class="align-middle text-danger">@(d.VotesDailyChange.ToString("N0"))</td>
                                            }

                                            @{
                                                long nextrank = 0;
                                                var PreviousDelegate = GetDelegateByRank(d.Rank - 1);

                                                long PreviousDelegateVotes = 0;

                                                if (PreviousDelegate != null)
                                                {
                                                    PreviousDelegateVotes = long.Parse(PreviousDelegate.Vote);
                                                }

                                                if (d.Rank == 1)
                                                {
                                                    nextrank = 0;
                                                }
                                                else if (d.Rank > 1)
                                                {
                                                    nextrank = (PreviousDelegateVotes - long.Parse(d.Vote)) / 100000000;
                                                }
                                            }

                                            <td align-middle class="align-middle text-muted">@nextrank.ToString("N0")</td>

                                            @if (d.Productivity > 98)
                                            {
                                                <td align-middle class="align-middle text-muted">@d.Productivity%</td>
                                            }
                                            else
                                            {
                                                <td align-middle class="align-middle text-muted text-warning">@d.Productivity%</td>
                                            }
                                            <td>
                                                <p>
                                                    <span class="inlinesparkline">@string.Join(",", d.VotePerDay)</span>
                                                </p>
                                            </td>
                                            <td></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
        <!-- ./Delegate Table-->
    </section>
</div>
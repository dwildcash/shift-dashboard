@using shift_dashboard.Models

@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject shift_dashboard.Models.DashboardConfig dashboardconfig
@model shift_dashboard.Models.Delegate[]

@{
    ViewData["Title"] = dashboardconfig.ApplicationName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<title>@dashboardconfig.ApplicationName</title>

@functions{

    // return the account name of previous delegate
    public shift_dashboard.Models.Delegate GetDelegateByRank(int rank)
    {
        return Model.Where(x => x.Rank == rank).FirstOrDefault();
    }
}

@section Scripts
{

}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">

    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h4>Dashboard version 0.2</h4>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">Index</li>
                    </ol>
                </div>
            </div>
        </div>
        <!-- /.container-fluid -->
    </section>

    <section class="content">

        <!-- Start Delegate Table-->
        <!-- Main content -->
        <div class="row">
            <div class="col-12">
                <div class="box card">
                    <div class="card-header">
                        <h3 class="card-title">Shift Delegates Stats</h3>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <div class="table-responsive">
                            <table data-toggle="table"
                                   data-search="true"
                                   data-pagination="true"
                                   data-page-Size="25"
                                   data-show-columns="true"
                                   data-mobile-responsive="true">
                                <thead>
                                    <tr>
                                        <th align-middle>Rank</th>
                                        <th align-middle class="align-middle">Username</th>
                                        <th align-middle class="align-middle">Voters</th>
                                        <th align-middle class="align-middle">Weight</th>
                                        <th align-middle class="align-middle">Daily Votes Change</th>
                                        <th align-middle class="align-middle">Votes For next Rank</th>
                                        <th align-middle class="align-middle">Share</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var d in Model)
                                    {
                                        <tr>
                                            <td class="align-middle">
                                                <h6>
                                                    @d.Rank &nbsp; &nbsp;
                                                    @if (d.RankDailyChange > 0)
                                                    {
                                                        <small class="badge badge-success">+@d.RankDailyChange</small>
                                                    }
                                                    else if (d.RankDailyChange < 0)
                                                    {
                                                        <small class="badge badge-danger">@d.RankDailyChange</small>
                                                    }
                                                </h6>
                                            </td>
                                            <td class="align-middle"><h6><a href="https://explorer.shiftnrg.org/address/@d.Address" target="_blank">@d.Username</a></h6></td>
                                            <td class="align-middle">
                                                <h6>
                                                    @d.NbVoters

                                                    @if (d.VotersDailyChange > 0)
                                                    {
                                                        <small class="badge badge-success">+@d.VotersDailyChange</small>
                                                    }
                                                    else if (d.VotersDailyChange < 0)
                                                    {
                                                        <small class="badge badge-danger">@d.VotersDailyChange</small>
                                                    }
                                                </h6>
                                            </td>
                                            <td class="align-middle"><h6>@((long.Parse(d.Vote) / 100000000).ToString("N0")) <small class="text-muted"> (@d.Approval%)</small></h6></td>

                                            @if (d.VotesDailyChange >= 0)
                                            {
                                                <td align-middle class="align-middle text-success">@(d.VotesDailyChange.ToString("N0"))</td>
                                            }
                                            else
                                            {
                                                <td align-middle class="align-middle text-danger">@(d.VotesDailyChange.ToString("N0"))</td>
                                            }

                                            @{
                                                long nextrank = 0;
                                                var PreviousDelegate = GetDelegateByRank(d.Rank - 1);

                                                long PreviousDelegateVotes = 0;

                                                if (PreviousDelegate != null)
                                                {
                                                    PreviousDelegateVotes = long.Parse(PreviousDelegate.Vote);
                                                }

                                                if (d.Rank == 1)
                                                {
                                                    nextrank = 0;
                                                }
                                                else if (d.Rank > 1)
                                                {
                                                    nextrank = (PreviousDelegateVotes - long.Parse(d.Vote)) / 100000000;
                                                }
                                            }

                                            <td align-middle class="align-middle text-muted">@nextrank.ToString("N0")</td>
                                            <td align-middle class="align-middle text-muted">0</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
        <!-- ./Delegate Table-->
    </section>
</div>